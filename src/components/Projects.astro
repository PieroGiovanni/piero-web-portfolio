---
import { getI18N } from "../i18n";
import ExternalLink from "../icons/ExternalLink.astro";
import ApolloIcon from "../icons/technologies/Apollo.astro";
import AstroIcon from "../icons/technologies/AstroIcon.astro";
import CSSIcon from "../icons/technologies/CSS.astro";
import GraphqlIcon from "../icons/technologies/GraphQL.astro";
import HTMLIcon from "../icons/technologies/HTML.astro";
import NextJsIcon from "../icons/technologies/NextJs.astro";
import NodeIcon from "../icons/technologies/NodeJs.astro";
import PostgreSQLIcon from "../icons/technologies/PostgreSQL.astro";
import PrismaIcon from "../icons/technologies/Prisma.astro";
import ReactIcon from "../icons/technologies/React.astro";
import ShadcnIcon from "../icons/technologies/Shadcn.astro";
import TailwindIcon from "../icons/technologies/Tailwind.astro";
import TypeScriptIcon from "../icons/technologies/TypeScript.astro";

interface Project {
  title: string;
  description: string;
  link: string;
  github?: string;
  image: string;
  tags: Tag[];
}

interface Tag {
  name: string;
  icon: (_props: Record<string, any>) => any;
}

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

enum Technologies {
  NEXT = "NEXT",
  TAILWIND = "TAILWIND",
  ASTRO = "ASTRO",
  GRAPHQL = "GRAPHQL",
  NODE = "NODE",
  APOLLO = "APOLLO",
  SHADCN = "SHADCN",
  PRISMA = "PRISMA",
  POSTGRESQL = "POSTGRESQL",
  TYPESCRIPT = "TYPESCRIPT",
  HTML = "HTML",
  CSS = "CSS",
  REACT = "REACT",
}

const Tags: { [key in Technologies]: Tag } = {
  NEXT: {
    name: "Next.js",
    icon: NextJsIcon,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    icon: TailwindIcon,
  },
  APOLLO: {
    name: "Apollo",
    icon: ApolloIcon,
  },
  ASTRO: {
    name: "Astro",
    icon: AstroIcon,
  },
  GRAPHQL: {
    name: "GraphQL",
    icon: GraphqlIcon,
  },
  NODE: {
    name: "Node.js",
    icon: NodeIcon,
  },
  POSTGRESQL: {
    name: "PostgreSQL",
    icon: PostgreSQLIcon,
  },
  PRISMA: {
    name: "Prisma",
    icon: PrismaIcon,
  },
  SHADCN: {
    name: "shadcn",
    icon: ShadcnIcon,
  },
  TYPESCRIPT: {
    name: "TypeScript",
    icon: TypeScriptIcon,
  },
  HTML: {
    name: "HTML",
    icon: HTMLIcon,
  },
  CSS: {
    name: "CSS",
    icon: CSSIcon,
  },
  REACT: {
    name: "React",
    icon: ReactIcon,
  },
};

const projects: Project[] = [
  {
    title: "Muy Guay E-commerce",
    description: i18n.SECTION.PROJECTS[1].DESCRIPTION,
    link: "https://muyguay.shop",
    github: undefined,
    image: "/images/projects/muyguay.webp",
    tags: [
      Tags.NEXT,
      Tags.TYPESCRIPT,
      Tags.NODE,
      Tags.GRAPHQL,
      Tags.TAILWIND,
      Tags.POSTGRESQL,
      Tags.SHADCN,
      Tags.PRISMA,
      Tags.APOLLO,
    ],
  },
  {
    title: i18n.SECTION.PROJECTS[2].TITLE,
    description: i18n.SECTION.PROJECTS[2].DESCRIPTION,
    link: "https://pierogiovanni.com",
    github: undefined,
    image: "/images/projects/web-portfolio.webp",
    tags: [Tags.ASTRO, Tags.TYPESCRIPT, Tags.HTML, Tags.CSS, Tags.TAILWIND],
  },
  {
    title: i18n.SECTION.PROJECTS[3].TITLE,
    description: i18n.SECTION.PROJECTS[3].DESCRIPTION,
    link: "https://dapper-narwhal-3fc91b.netlify.app/",
    github: undefined,
    image: "/images/projects/spotify-clone.webp",
    tags: [
      Tags.ASTRO,
      Tags.TYPESCRIPT,
      Tags.REACT,
      Tags.HTML,
      Tags.CSS,
      Tags.TAILWIND,
    ],
  },
];
---

{
  projects.map(({ image, title, description, tags, link }) => (
    <article>
      <h3 class="text-2xl font-semibold dark:text-cyan-400 text-cyan-600 mb-2">
        {title}
      </h3>
      <p class="md:text-lg mb-4 text-pretty">{description}</p>
      <ul class="flex gap-2 flex-row mb-4 justify-center flex-wrap">
        {tags.map((tag) => (
          <li>
            <span
              class={`flex gap-x-2 rounded-full dark:bg-white/10 text-xs py-1 px-2 border dark:border-cyan-400/20 bg-black/5 border-slate-950/20`}
            >
              <tag.icon class="size-4" />
              {tag.name}
            </span>
          </li>
        ))}
      </ul>
      <a href={link} class="relative group">
        <img
          loading="lazy"
          class="rounded shadow-2xl dark:shadow-white/20 aspect-video shadow-black/20"
          src={image}
          alt={`Captura de pantalla del proyecto ${title}`}
        />
        <ExternalLink class="size-8 absolute top-1 right-1 transition:all duration-500 opacity-0 group-hover:opacity-100 text-white" />
      </a>
    </article>
  ))
}
